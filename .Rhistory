ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2), dat)
coef(the_fit)
#setNames(coef(the_fit), c("intercept", "slope"))
}
le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
le_plot(gapminder %>% filter(country == "Zimbabwe"))
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
le_plot(gapminder %>% filter(country == "Zimbabwe"))
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
model_lin <- le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
plot(fitted(model_lin),residuals(model_lin))
model_lin.the_fit
1952:5:2007
1952:2007:5
linspace(1952, 2007, 12)
seq(1952, 2007, 5)
str(model_lin)
str(model_lin$slope)
str(model_lin[0])
str(model_lin[1])
model_lin[1]
plot(seq(1952, 2007, 5), model_lin[1] + x * model_lin[2])
plot(seq(1952, 2007, 5), model_lin[1] + (seq(1952, 2007, 5) - 1952) * model_lin[2])
years
le_lin = poly(years, 1, model_lin)
years = seq(1952, 2007, 5)
le_lin = poly(years, 1, model_lin)
?poly
le_lin = poly(years, 1, coefs = model_lin)
model_lin
attr(model_lin)
attr(model_lin, "coefs")
str(model_lin)
model_lin.num
model_lin.Named
str(model_lin)
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
model_lin <- le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
str(model_lin)
#model_lin.Named
years = seq(1952, 2007, 5)
#le_lin = poly(years, 1, coefs = model_lin)
plot(years, model_lin[1] + (seq(1952, 2007, 5) - 1952) * model_lin[2])
le_plot(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
model_lin <- le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
#le_lin = poly(years, 1, coefs = model_lin)
plot(years, model_lin[1] + (seq(1952, 2007, 5) - 1952) * model_lin[2])
le_plot(gapminder %>% filter(country == "Zimbabwe"))
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
model_lin <- le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
#le_lin = poly(years, 1, coefs = model_lin)
plot(years, model_lin[1] + (seq(1952, 2007, 5) - 1952) * model_lin[2])
le_plot(gapminder %>% filter(country == "Zimbabwe"))
poly(years, 1)
poly(years - 1952, 1)
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
model_lin <- le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
le_lin = model_lin[1] + (years - 1952) * model_lin[2]
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
plot(years, le_lin)
le_plot(gapminder %>% filter(country == "Zimbabwe"))
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
model_lin <- le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
le_lin = model_lin[1] + (years - 1952) * model_lin[2]
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
plot(years, le_qua)
le_plot(gapminder %>% filter(country == "Zimbabwe"))
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
model_lin <- le_lin_fit(gapminder %>% filter(country == "Zimbabwe"))
model_qua <- le_qua_fit(gapminder %>% filter(country == "Zimbabwe"))
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
le_lin = model_lin[1] + (years - 1952) * model_lin[2]
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
plot(years, le_qua)
le_plot(gapminder %>% filter(country == "Zimbabwe"))
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
gap_zim <- gapminder %>% filter(country == "Zimbabwe")
model_lin <- le_lin_fit(gap_zim)
model_qua <- le_qua_fit(gap_zim)
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
le_lin = model_lin[1] + (years - 1952) * model_lin[2]
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
#le_plot(gap_zim)
ggplot(gap_zim, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
gap_zim <- gapminder %>% filter(country == "Zimbabwe")
model_lin <- le_lin_fit(gap_zim)
model_qua <- le_qua_fit(gap_zim)
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
le_lin = model_lin[1] + (years - 1952) * model_lin[2]
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
#le_plot(gap_zim)
ggplot(gap_zim, aes(x = year, y = lifeExp)) +
geom_point()
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
gap_zim <- gapminder %>% filter(country == "Zimbabwe")
model_lin <- le_lin_fit(gap_zim)
model_qua <- le_qua_fit(gap_zim)
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
le_lin = model_lin[1] + (years - 1952) * model_lin[2]
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
le_fit = tibble(
year = years,
le_lin = le_lin,
le_qua = le_qua
)
#le_plot(gap_zim)
ggplot(gap_zim, aes(x = year, y = lifeExp)) +
geom_point() +
geom_line(aes(x = year, y = le_lin), le_fit)
le_plot <- function(dat) {
ggplot(dat, aes(x = year, y = lifeExp)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
}
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
gap_zim <- gapminder %>% filter(country == "Zimbabwe")
model_lin <- le_lin_fit(gap_zim)
model_qua <- le_qua_fit(gap_zim)
model_lin
model_qua
#model_lin.Named
years = seq(1952, 2007, 5)
le_lin = model_lin[1] + (years - 1952) * model_lin[2]
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
le_fit = tibble(
year = years,
le_lin = le_lin,
le_qua = le_qua
)
#le_plot(gap_zim)
ggplot(gap_zim, aes(x = year, y = lifeExp)) +
geom_point() +
geom_line(aes(x = year, y = le_qua), le_fit)
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
gap_zim <- gapminder %>% filter(country == "Zimbabwe")
(model_lin <- le_lin_fit(gap_zim))
(model_qua <- le_qua_fit(gap_zim))
years = seq(1952, 2007, 5)
le_fit = tibble(
year = years,
le_lin = model_lin[1] + (years - 1952) * model_lin[2],
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
)
ggplot(gap_zim, aes(x = year, y = lifeExp)) +
geom_point() +
geom_line(aes(x = year, y = le_qua), le_fit)
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
gap_zim <- gapminder %>% filter(country == "Zimbabwe")
(model_lin <- le_lin_fit(gap_zim))
(model_qua <- le_qua_fit(gap_zim))
years = seq(1952, 2007, 5)
le_fit = tibble(
year = years,
le_lin = model_lin[1] + (years - 1952) * model_lin[2],
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
)
ggplot(gap_zim, aes(x = year, y = lifeExp)) +
geom_point() +
geom_line(aes(x = year, y = le_lin), le_fit, color = "blue")
geom_line(aes(x = year, y = le_qua), le_fit, color = "red")
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_qua_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ poly(year - offset, 2, raw = TRUE), dat)
setNames(coef(the_fit), c("intercept", "poly 1", "poly 2"))
}
gap_zim <- gapminder %>% filter(country == "Zimbabwe")
(model_lin <- le_lin_fit(gap_zim))
(model_qua <- le_qua_fit(gap_zim))
years = seq(1952, 2007, 5)
le_fit = tibble(
year = years,
le_lin = model_lin[1] + (years - 1952) * model_lin[2],
le_qua = model_qua[1] + (years - 1952) * model_qua[2] + (years - 1952)^2 * model_qua[3]
)
ggplot(gap_zim, aes(x = year, y = lifeExp)) +
geom_point() +
geom_line(aes(x = year, y = le_lin), le_fit, color = "blue") +
geom_line(aes(x = year, y = le_qua), le_fit, color = "red")
txt <- "What does `str_wrap()` do? When might you want to use it?"
cat(str_wrap(txt, width = 40, indent = 2))
?rmarkdown::render()
install.packages("rvest")
library(tidyverse)
library(rvest)
simple_page <- read_html("cm111-simple_script.html")
simple_page
simple_page %>% str()
simple_page <- read_html("cm111-simple_script.html")
simple_page %>% html_structure()
simple_page %>% html_text()
simple_page %>% html_text() %>% cat()
simple_page %>% html_text() #%>% cat()
simple_page %>%
html_nodes("p")
simple_page %>%
html_nodes("p") %>%
html_text()
simple_page %>%
html_nodes("a")
simple_page %>%
html_nodes("a") %>%
html_text()
html_text()
html_text()
html_nodes("#wiki"") %>%
simple_page %>%
html_nodes("#wiki") %>%
simple_page %>%
html_nodes("#wiki") %>%
html_text()
simple_page %>%
html_nodes("p a") %>%
html_text()
simple_page %>%
html_nodes("*") %>%
html_text()
simple_page %>%
html_nodes("*")
simple_page %>%
html_nodes("*") %>%
html_name()
simple_page %>%
html_nodes("a") %>%
html_attrs()
simple_page %>%
html_nodes("a") %>%
html_attr(name = "herf")
simple_page %>%
html_nodes("a") %>%
html_attr(name = "href")
tibble(
text = simple_page %>%
html_nodes("p a") %>%
html_text(),
url  = simple_page %>%
html_nodes("a") %>%
html_attr(name = "href")
)
read_html("https://www.musixmatch.com/search/kane%20brown") %>%
html_nodes(".track-card")
read_html("https://www.musixmatch.com/search/kane%20brown") %>%
html_nodes(".track-card") %>%
html_text()
read_html("https://www.musixmatch.com/search/kane%20brown") %>%
html_nodes(".track-card .media-card-title") %>%
html_text()
read_html("https://www.musixmatch.com/search/kane%20brown/tracks") %>%
html_nodes(".track-card .media-card-title") %>%
html_text()
read_html("https://en.wikipedia.org/wiki/List_of_roller_coaster_rankings") %>%
html_table()
read_html("https://en.wikipedia.org/wiki/List_of_roller_coaster_rankings") %>%
html_table(fill = TRUE)
read_html("https://en.wikipedia.org/wiki/List_of_roller_coaster_rankings") %>%
html_table(fill = TRUE) %>%
.[[2]]
read_html("https://en.wikipedia.org/wiki/List_of_roller_coaster_rankings") %>%
html_table(fill = TRUE) %>%
`[[`(2)
read_html("https://en.wikipedia.org/wiki/List_of_roller_coaster_rankings") %>%
html_table(fill = TRUE) %>%
.[[2]]
fromJSON('{"city" : "Z\\u00FCrich"}') # A list
install.packages("jsonlite")
install.packages("jsonlite")
jsonlite::read_json("http://www.omdbapi.com/?t=Jurassic+Park&apikey=c92872ae")
jsonlite::fromJSON("http://www.omdbapi.com/?t=Jurassic+Park&apikey=c92872ae")
jsonlite::fromJSON("http://www.omdbapi.com/?t=Jurassic+Park&apikey=c92872ae")
curl -v https://github.com/STAT545-UBC/Classroom
library(httr)
str(site)
site <- GET("www.neopets.com")
str(site)
names(site)
site$status_code
site$content
#site$content
status_code(site)
content(site)
site <- GET("https://api.github.com/users/hadley/orgs")
names(site)
status_code(site)
content(site)
jsonlite::fromJSON("https://api.github.com/users/hadley/orgs")
str(content(site))
jsonlite::fromJSON("http://www.omdbapi.com/?t=Avengers&apikey=c92872ae")
RCurl
RCurl::AUTH_ANY
install.packages("gh")
knitr::opts_chunk$set(echo = TRUE)
my_api_id <- read.delim("id.private")
my_api_id <- read.delim("id.private")
my_api_id
my_api_id <- readt("id.private")
my_api_id <- read.delim("id.private")
my_api_id
character(my_api_id)
as.character(my_api_id)
my_api_id
my_api_id[0]
my_api_id[1]
my_api_id <- read.delim2("id.private")
my_api_id
str(my_api_id)
my_api_id <- readline("id.private")
